<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>